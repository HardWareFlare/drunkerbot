//                 /*
//                 ████████ ███████ ███████ ████████
//                    ██    ██      ██         ██
//                    ██    █████   ███████    ██
//                    ██    ██           ██    ██
//                    ██    ███████ ███████    ██
//                 */
//
//             case 'test':
//
//                 // snooper.api.post("/api/submit", {
//                 //     api_type: "json",
//                 //     kind: 'self',
//                 //     sr: 'drunkerbot',
//                 //     title: 'Hello World',
//                 //     text: 'I\'m sending you some sunshine!'
//                 // }, function(err, statusCode, data) {
//                 //     if (!err) console.log('Just posted to reddit')
//                 // })
//
//                 break;


// var userPromise = new Promise(function(resolve, reject) {
//     var logindata;
//
//     if (req.query.token != undefined) {
//         logindata = getUserData(req.query.token);
//     }
//
//     async function getUserData(tokin) {
//         const response = await fetch('https://discordapp.com/api/v6/users/@me', {
//             method: 'GET',
//             headers: {
//                 //'Content-Type': 'application/x-www-form-urlencoded',
//                 Authorization: 'Bearer ' + tokin,
//             },
//         });
//         const userstuff = await response.json();
//         return userstuff;
//     }
//
//     resolve(logindata);
// });
//
// var statusPromise = new Promise(function(resolve, reject) {
//     db.get("SELECT * FROM t_events WHERE end IS NULL;", function(err, results) {
//         if (err) {
//             logger.error(err);
//         }
//         if (results == undefined) {
//             results = settings.defaultResults;
//             resolve(results); // reject
//         } else {
//             results.state = true;
//             resolve(results); // fulfilled
//         }
//     });
// });
//
// var dootsPromise = new Promise(function(resolve, reject) {
//     db.all("SELECT * FROM t_users ORDER BY message_count DESC LIMIT 10;", function(err, results) {
//         if (err) {
//             logger.error(err);
//         }
//         if (results == "") {
//             logger.error("Somehow, nobody has messages");
//             resolve(); // reject
//         } else {
//             resolve(results); // fulfilled
//         }
//     });
// });
//
// var streamsPromise = new Promise(function(resolve, reject) {
//     db.all("SELECT * FROM t_events ORDER BY start DESC;", function(err, results) {
//         if (err) {
//             logger.error(err);
//         }
//         if (results == "") {
//             logger.error("Somehow, nobody has dboxed yet")
//             resolve(results); // reject
//         } else {
//             resolve(results); // fulfilled
//         }
//     });
// });
//
// var dbotstatsPromise = new Promise(function(resolve, reject) {
//     db.get("SELECT * FROM t_botstats;", function(err, results) {
//         if (err) {
//             logger.error(err);
//         }
//         if (results != undefined) {
//             webhits = results.webhits;
//             db.run("UPDATE t_botstats SET webhits = " + parseInt(results.webhits + 1) + ";", function(err) {
//                 if (err) {
//                     logger.error(err);
//                 }
//             });
//             resolve(results);
//         } else {
//             logger.error("Um... No dbotstat table in database? Weird.");
//             resolve(results);
//         }
//     });
// });
//
// var collectAndRespond = function() {
//     Promise.all([statusPromise, streamsPromise, dootsPromise, dbotstatsPromise, userPromise]).then(function(values) {
//         res.render('index', {
//             drunkerstatus: values[0],
//             dboxes: values[1],
//             doots: values[2],
//             dbotstats: values[3],
//             logindata: values[4]
//         })
//     }).catch().catch().catch().catch().catch();
// }
//
// collectAndRespond();
